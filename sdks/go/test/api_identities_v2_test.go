/*
Payments Direct API

Testing IdentitiesV2APIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package paymentsdirect

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID/paymentsdirect"
)

func Test_paymentsdirect_IdentitiesV2APIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test IdentitiesV2APIService CreateIdentityV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.IdentitiesV2API.CreateIdentityV2(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IdentitiesV2APIService DeactivateIdentityV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var identityId string

		httpRes, err := apiClient.IdentitiesV2API.DeactivateIdentityV2(context.Background(), identityId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IdentitiesV2APIService GetIdentitiesV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.IdentitiesV2API.GetIdentitiesV2(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IdentitiesV2APIService GetIdentityByIdV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var identityId string

		resp, httpRes, err := apiClient.IdentitiesV2API.GetIdentityByIdV2(context.Background(), identityId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
