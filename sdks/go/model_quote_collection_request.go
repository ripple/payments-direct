/*
Payments Direct API

Use the Payments Direct API to get quotes, create and manage payments, and manage originator and beneficiary identities.  ## API environments  The Payments Direct API offers the following environments:  | <div style=\"width:90px\">Environment</div>  | Base URL                      | Description                               | | ------------------------------------------ | ----------------------------- | ----------------------------------------- | | Test                                       | `https://api.test.ripple.com` | Test environment with simulated currency. | | Production                                 | `https://api.ripple.com`      | Production environment                    |  ## API authentication  All {{process.env.VAR_RPD}} API operations require a Bearer access token specific to the environment you're using. Ripple provides a secure model for authentication and authorization by providing access tokens scoped for a set of credentials.  ### Generate client ID and client secret  You will need your _client ID_ and _client secret_ to obtain an access token.  If you do not already have your client ID and client secret, do the following:  1. Log into the Ripple Payments UI. 2. In the left navigation menu, click **Settings**. 3. Under **Administration**, click **API Credentials**. 4. In the dropdown list next to the page title, select the access environment. For example, to provision credentials for the test environment, select **Test** from the dropdown list. 5. In the upper right corner of the page, click **New Credential**. 6. Click **Save and Generate Key**.  **Caution:** The *client secret* is displayed only once when you are creating new credentials. You cannot retrieve the secret after exiting this page. Copy and store the client secret securely and share it with authorized individuals in accordance with your organization's security policy.  You can now use the client ID and client secret to generate access tokens using the [Request an access token](/api-docs/payments-direct-api/reference/#operation/authenticate) operation.  ### Request an access token  To get an access token, use the [Request an access token](/api-docs/payments-direct-api/reference/#operation/authenticate) operation with your `client_id` and `client_secret`. The response contains a token in the `access_token` field.  We recommend rotating your API credentials at regular intervals according to your organization's security policy.  **Note**: Authentication tokens are not a fixed length and can vary, avoid validating tokens based on character length. 

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentsdirect

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QuoteCollectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteCollectionRequest{}

// QuoteCollectionRequest Request to create a quote collection
type QuoteCollectionRequest struct {
	// The amount for which you wish to receive a collection of quotes.
	QuoteAmount float64 `json:"quoteAmount"`
	QuoteAmountType QuoteAmountType `json:"quoteAmountType"`
	// The currency code of the currency that you are sending.
	SourceCurrency string `json:"sourceCurrency" validate:"regexp=^[a-zA-Z]{3,5}$"`
	// The currency code of the currency in which your beneficiary will receive this payment.
	DestinationCurrency string `json:"destinationCurrency" validate:"regexp=^[a-zA-Z]{3,5}$"`
	// The country code of the country from where you are sending the funds. This is an ISO 3166-1 alpha-2 code.
	SourceCountry *string `json:"sourceCountry,omitempty" validate:"regexp=^[a-zA-Z]{2}$"`
	// The country where the beneficiary is located specified in Alpha-2 Code format as defined in the ISO CountryCode ISO 3166-1 list. If the beneficiary is an individual, then this value is their country of residence. If the beneficiary is an institution, then this value is their the country of incorporation.
	DestinationCountry *string `json:"destinationCountry,omitempty" validate:"regexp=^[a-zA-Z]{2}$"`
	// The name of the payout category.
	PayoutCategory string `json:"payoutCategory"`
	// The name of the pay in category indicating how this payment will be funded.
	PayinCategory string `json:"payinCategory"`
	// The name of the blockchain network on which the beneficiary will receive this payment.
	DestinationBlockchainNetwork *string `json:"destinationBlockchainNetwork,omitempty"`
}

type _QuoteCollectionRequest QuoteCollectionRequest

// NewQuoteCollectionRequest instantiates a new QuoteCollectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteCollectionRequest(quoteAmount float64, quoteAmountType QuoteAmountType, sourceCurrency string, destinationCurrency string, payoutCategory string, payinCategory string) *QuoteCollectionRequest {
	this := QuoteCollectionRequest{}
	this.QuoteAmount = quoteAmount
	this.QuoteAmountType = quoteAmountType
	this.SourceCurrency = sourceCurrency
	this.DestinationCurrency = destinationCurrency
	this.PayoutCategory = payoutCategory
	this.PayinCategory = payinCategory
	return &this
}

// NewQuoteCollectionRequestWithDefaults instantiates a new QuoteCollectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteCollectionRequestWithDefaults() *QuoteCollectionRequest {
	this := QuoteCollectionRequest{}
	var quoteAmountType QuoteAmountType = QUOTEAMOUNTTYPE_SOURCE_AMOUNT
	this.QuoteAmountType = quoteAmountType
	return &this
}

// GetQuoteAmount returns the QuoteAmount field value
func (o *QuoteCollectionRequest) GetQuoteAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.QuoteAmount
}

// GetQuoteAmountOk returns a tuple with the QuoteAmount field value
// and a boolean to check if the value has been set.
func (o *QuoteCollectionRequest) GetQuoteAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteAmount, true
}

// SetQuoteAmount sets field value
func (o *QuoteCollectionRequest) SetQuoteAmount(v float64) {
	o.QuoteAmount = v
}

// GetQuoteAmountType returns the QuoteAmountType field value
func (o *QuoteCollectionRequest) GetQuoteAmountType() QuoteAmountType {
	if o == nil {
		var ret QuoteAmountType
		return ret
	}

	return o.QuoteAmountType
}

// GetQuoteAmountTypeOk returns a tuple with the QuoteAmountType field value
// and a boolean to check if the value has been set.
func (o *QuoteCollectionRequest) GetQuoteAmountTypeOk() (*QuoteAmountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteAmountType, true
}

// SetQuoteAmountType sets field value
func (o *QuoteCollectionRequest) SetQuoteAmountType(v QuoteAmountType) {
	o.QuoteAmountType = v
}

// GetSourceCurrency returns the SourceCurrency field value
func (o *QuoteCollectionRequest) GetSourceCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceCurrency
}

// GetSourceCurrencyOk returns a tuple with the SourceCurrency field value
// and a boolean to check if the value has been set.
func (o *QuoteCollectionRequest) GetSourceCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceCurrency, true
}

// SetSourceCurrency sets field value
func (o *QuoteCollectionRequest) SetSourceCurrency(v string) {
	o.SourceCurrency = v
}

// GetDestinationCurrency returns the DestinationCurrency field value
func (o *QuoteCollectionRequest) GetDestinationCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationCurrency
}

// GetDestinationCurrencyOk returns a tuple with the DestinationCurrency field value
// and a boolean to check if the value has been set.
func (o *QuoteCollectionRequest) GetDestinationCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationCurrency, true
}

// SetDestinationCurrency sets field value
func (o *QuoteCollectionRequest) SetDestinationCurrency(v string) {
	o.DestinationCurrency = v
}

// GetSourceCountry returns the SourceCountry field value if set, zero value otherwise.
func (o *QuoteCollectionRequest) GetSourceCountry() string {
	if o == nil || IsNil(o.SourceCountry) {
		var ret string
		return ret
	}
	return *o.SourceCountry
}

// GetSourceCountryOk returns a tuple with the SourceCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteCollectionRequest) GetSourceCountryOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCountry) {
		return nil, false
	}
	return o.SourceCountry, true
}

// HasSourceCountry returns a boolean if a field has been set.
func (o *QuoteCollectionRequest) HasSourceCountry() bool {
	if o != nil && !IsNil(o.SourceCountry) {
		return true
	}

	return false
}

// SetSourceCountry gets a reference to the given string and assigns it to the SourceCountry field.
func (o *QuoteCollectionRequest) SetSourceCountry(v string) {
	o.SourceCountry = &v
}

// GetDestinationCountry returns the DestinationCountry field value if set, zero value otherwise.
func (o *QuoteCollectionRequest) GetDestinationCountry() string {
	if o == nil || IsNil(o.DestinationCountry) {
		var ret string
		return ret
	}
	return *o.DestinationCountry
}

// GetDestinationCountryOk returns a tuple with the DestinationCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteCollectionRequest) GetDestinationCountryOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationCountry) {
		return nil, false
	}
	return o.DestinationCountry, true
}

// HasDestinationCountry returns a boolean if a field has been set.
func (o *QuoteCollectionRequest) HasDestinationCountry() bool {
	if o != nil && !IsNil(o.DestinationCountry) {
		return true
	}

	return false
}

// SetDestinationCountry gets a reference to the given string and assigns it to the DestinationCountry field.
func (o *QuoteCollectionRequest) SetDestinationCountry(v string) {
	o.DestinationCountry = &v
}

// GetPayoutCategory returns the PayoutCategory field value
func (o *QuoteCollectionRequest) GetPayoutCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayoutCategory
}

// GetPayoutCategoryOk returns a tuple with the PayoutCategory field value
// and a boolean to check if the value has been set.
func (o *QuoteCollectionRequest) GetPayoutCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayoutCategory, true
}

// SetPayoutCategory sets field value
func (o *QuoteCollectionRequest) SetPayoutCategory(v string) {
	o.PayoutCategory = v
}

// GetPayinCategory returns the PayinCategory field value
func (o *QuoteCollectionRequest) GetPayinCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayinCategory
}

// GetPayinCategoryOk returns a tuple with the PayinCategory field value
// and a boolean to check if the value has been set.
func (o *QuoteCollectionRequest) GetPayinCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayinCategory, true
}

// SetPayinCategory sets field value
func (o *QuoteCollectionRequest) SetPayinCategory(v string) {
	o.PayinCategory = v
}

// GetDestinationBlockchainNetwork returns the DestinationBlockchainNetwork field value if set, zero value otherwise.
func (o *QuoteCollectionRequest) GetDestinationBlockchainNetwork() string {
	if o == nil || IsNil(o.DestinationBlockchainNetwork) {
		var ret string
		return ret
	}
	return *o.DestinationBlockchainNetwork
}

// GetDestinationBlockchainNetworkOk returns a tuple with the DestinationBlockchainNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteCollectionRequest) GetDestinationBlockchainNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationBlockchainNetwork) {
		return nil, false
	}
	return o.DestinationBlockchainNetwork, true
}

// HasDestinationBlockchainNetwork returns a boolean if a field has been set.
func (o *QuoteCollectionRequest) HasDestinationBlockchainNetwork() bool {
	if o != nil && !IsNil(o.DestinationBlockchainNetwork) {
		return true
	}

	return false
}

// SetDestinationBlockchainNetwork gets a reference to the given string and assigns it to the DestinationBlockchainNetwork field.
func (o *QuoteCollectionRequest) SetDestinationBlockchainNetwork(v string) {
	o.DestinationBlockchainNetwork = &v
}

func (o QuoteCollectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteCollectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["quoteAmount"] = o.QuoteAmount
	toSerialize["quoteAmountType"] = o.QuoteAmountType
	toSerialize["sourceCurrency"] = o.SourceCurrency
	toSerialize["destinationCurrency"] = o.DestinationCurrency
	if !IsNil(o.SourceCountry) {
		toSerialize["sourceCountry"] = o.SourceCountry
	}
	if !IsNil(o.DestinationCountry) {
		toSerialize["destinationCountry"] = o.DestinationCountry
	}
	toSerialize["payoutCategory"] = o.PayoutCategory
	toSerialize["payinCategory"] = o.PayinCategory
	if !IsNil(o.DestinationBlockchainNetwork) {
		toSerialize["destinationBlockchainNetwork"] = o.DestinationBlockchainNetwork
	}
	return toSerialize, nil
}

func (o *QuoteCollectionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"quoteAmount",
		"quoteAmountType",
		"sourceCurrency",
		"destinationCurrency",
		"payoutCategory",
		"payinCategory",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuoteCollectionRequest := _QuoteCollectionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQuoteCollectionRequest)

	if err != nil {
		return err
	}

	*o = QuoteCollectionRequest(varQuoteCollectionRequest)

	return err
}

type NullableQuoteCollectionRequest struct {
	value *QuoteCollectionRequest
	isSet bool
}

func (v NullableQuoteCollectionRequest) Get() *QuoteCollectionRequest {
	return v.value
}

func (v *NullableQuoteCollectionRequest) Set(val *QuoteCollectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteCollectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteCollectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteCollectionRequest(val *QuoteCollectionRequest) *NullableQuoteCollectionRequest {
	return &NullableQuoteCollectionRequest{value: val, isSet: true}
}

func (v NullableQuoteCollectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteCollectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


