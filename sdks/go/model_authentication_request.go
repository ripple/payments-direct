/*
Payments Direct API

Use the Payments Direct API to get quotes, create and manage payments, and manage originator and beneficiary identities.  ## API environments  The Payments Direct API offers the following environments:  | <div style=\"width:90px\">Environment</div>  | Base URL                      | Description                               | | ------------------------------------------ | ----------------------------- | ----------------------------------------- | | Test                                       | `https://api.test.ripple.com` | Test environment with simulated currency. | | Production                                 | `https://api.ripple.com`      | Production environment                    |  ## API authentication  All {{process.env.VAR_RPD}} API operations require a Bearer access token specific to the environment you're using. Ripple provides a secure model for authentication and authorization by providing access tokens scoped for a set of credentials.  ### Generate client ID and client secret  You will need your _client ID_ and _client secret_ to obtain an access token.  If you do not already have your client ID and client secret, do the following:  1. Log into the Ripple Payments UI. 2. In the left navigation menu, click **Settings**. 3. Under **Administration**, click **API Credentials**. 4. In the dropdown list next to the page title, select the access environment. For example, to provision credentials for the test environment, select **Test** from the dropdown list. 5. In the upper right corner of the page, click **New Credential**. 6. Click **Save and Generate Key**.  **Caution:** The *client secret* is displayed only once when you are creating new credentials. You cannot retrieve the secret after exiting this page. Copy and store the client secret securely and share it with authorized individuals in accordance with your organization's security policy.  You can now use the client ID and client secret to generate access tokens using the [Request an access token](/api-docs/payments-direct-api/reference/#operation/authenticate) operation.  ### Request an access token  To get an access token, use the [Request an access token](/api-docs/payments-direct-api/reference/#operation/authenticate) operation with your `client_id` and `client_secret`. The response contains a token in the `access_token` field.  We recommend rotating your API credentials at regular intervals according to your organization's security policy.  **Note**: Authentication tokens are not a fixed length and can vary, avoid validating tokens based on character length. 

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentsdirect

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AuthenticationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationRequest{}

// AuthenticationRequest The authentication request.
type AuthenticationRequest struct {
	// The client ID associated with a specific set of API credentials.
	ClientId string `json:"client_id"`
	// The client secret associated with a specific set of API credentials.
	ClientSecret string `json:"client_secret"`
	// The value of the `audience` field is based on [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) syntax.  **Format**: `urn:ripplexcurrent-{ENVIRONMENT_STRING}:{YOUR_TENANT_ID}`  * The first component is `urn:ripplenetxcurrent-`. * The second component refers to the environment you want to access. * The third component is your tenant ID. Ripple integration engineers provide this component during training.  | Environment | Environment string | Description | | --- | --- | --- | | Test | `test` | Test environment with simulated partners and simulated currency. | | Production | `prod` | Production environment for Ripple's internal services. |  **Example**: `urn:ripplexcurrent-test:{YOUR_TENANT_ID}` 
	Audience string `json:"audience"`
	// Set the grant-type for this client credentials request. This must be set to `client_credentials`.
	GrantType string `json:"grant_type"`
}

type _AuthenticationRequest AuthenticationRequest

// NewAuthenticationRequest instantiates a new AuthenticationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationRequest(clientId string, clientSecret string, audience string, grantType string) *AuthenticationRequest {
	this := AuthenticationRequest{}
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	this.Audience = audience
	this.GrantType = grantType
	return &this
}

// NewAuthenticationRequestWithDefaults instantiates a new AuthenticationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationRequestWithDefaults() *AuthenticationRequest {
	this := AuthenticationRequest{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *AuthenticationRequest) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *AuthenticationRequest) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *AuthenticationRequest) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *AuthenticationRequest) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *AuthenticationRequest) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *AuthenticationRequest) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetAudience returns the Audience field value
func (o *AuthenticationRequest) GetAudience() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value
// and a boolean to check if the value has been set.
func (o *AuthenticationRequest) GetAudienceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Audience, true
}

// SetAudience sets field value
func (o *AuthenticationRequest) SetAudience(v string) {
	o.Audience = v
}

// GetGrantType returns the GrantType field value
func (o *AuthenticationRequest) GetGrantType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *AuthenticationRequest) GetGrantTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *AuthenticationRequest) SetGrantType(v string) {
	o.GrantType = v
}

func (o AuthenticationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["client_id"] = o.ClientId
	toSerialize["client_secret"] = o.ClientSecret
	toSerialize["audience"] = o.Audience
	toSerialize["grant_type"] = o.GrantType
	return toSerialize, nil
}

func (o *AuthenticationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client_id",
		"client_secret",
		"audience",
		"grant_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthenticationRequest := _AuthenticationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAuthenticationRequest)

	if err != nil {
		return err
	}

	*o = AuthenticationRequest(varAuthenticationRequest)

	return err
}

type NullableAuthenticationRequest struct {
	value *AuthenticationRequest
	isSet bool
}

func (v NullableAuthenticationRequest) Get() *AuthenticationRequest {
	return v.value
}

func (v *NullableAuthenticationRequest) Set(val *AuthenticationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationRequest(val *AuthenticationRequest) *NullableAuthenticationRequest {
	return &NullableAuthenticationRequest{value: val, isSet: true}
}

func (v NullableAuthenticationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


