/*
Payments Direct API

Use the Payments Direct API to get quotes, create and manage payments, and manage originator and beneficiary identities.  ## API environments  The Payments Direct API offers the following environments:  | <div style=\"width:90px\">Environment</div>  | Base URL                      | Description                               | | ------------------------------------------ | ----------------------------- | ----------------------------------------- | | Test                                       | `https://api.test.ripple.com` | Test environment with simulated currency. | | Production                                 | `https://api.ripple.com`      | Production environment                    |  ## API authentication  All {{process.env.VAR_RPD}} API operations require a Bearer access token specific to the environment you're using. Ripple provides a secure model for authentication and authorization by providing access tokens scoped for a set of credentials.  ### Generate client ID and client secret  You will need your _client ID_ and _client secret_ to obtain an access token.  If you do not already have your client ID and client secret, do the following:  1. Log into the Ripple Payments UI. 2. In the left navigation menu, click **Settings**. 3. Under **Administration**, click **API Credentials**. 4. In the dropdown list next to the page title, select the access environment. For example, to provision credentials for the test environment, select **Test** from the dropdown list. 5. In the upper right corner of the page, click **New Credential**. 6. Click **Save and Generate Key**.  **Caution:** The *client secret* is displayed only once when you are creating new credentials. You cannot retrieve the secret after exiting this page. Copy and store the client secret securely and share it with authorized individuals in accordance with your organization's security policy.  You can now use the client ID and client secret to generate access tokens using the [Request an access token](/api-docs/payments-direct-api/reference/#operation/authenticate) operation.  ### Request an access token  To get an access token, use the [Request an access token](/api-docs/payments-direct-api/reference/#operation/authenticate) operation with your `client_id` and `client_secret`. The response contains a token in the `access_token` field.  We recommend rotating your API credentials at regular intervals according to your organization's security policy.  **Note**: Authentication tokens are not a fixed length and can vary, avoid validating tokens based on character length. 

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentsdirect

import (
	"encoding/json"
)

// checks if the Originator type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Originator{}

// Originator Payment originator and source details.
type Originator struct {
	// The unique ID associated with the payment originator's identity record.
	OriginatorIdentityId *string `json:"originatorIdentityId,omitempty"`
	// The current version of the originator's identity record.
	OriginatorIdentityIdVersion *int32 `json:"originatorIdentityIdVersion,omitempty"`
	// Nickname associated with the originator's identity record.
	OriginatorIdentityNickName *string `json:"originatorIdentityNickName,omitempty"`
	// An ID associated with this payment, if provided by the customer during payment initiation.
	InternalId *string `json:"internalId,omitempty"`
	// The country where the payment originator is located or incorporated, specified in Alpha-2 Code format as defined in the ISO CountryCode ISO 3166-1 list.
	SourceCountry *string `json:"sourceCountry,omitempty" validate:"regexp=^[A-Z]{2}$"`
	// originator's currency
	SourceCurrency *string `json:"sourceCurrency,omitempty" validate:"regexp=^[A-Z]{3,5}$"`
	// The amount sent by the originator in this payment. This field can hold a value with up to 6 decimal places.
	SourceAmount *float64 `json:"sourceAmount,omitempty"`
	// Details about how this payment is funded.
	Payin *string `json:"payin,omitempty"`
}

// NewOriginator instantiates a new Originator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginator() *Originator {
	this := Originator{}
	return &this
}

// NewOriginatorWithDefaults instantiates a new Originator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginatorWithDefaults() *Originator {
	this := Originator{}
	return &this
}

// GetOriginatorIdentityId returns the OriginatorIdentityId field value if set, zero value otherwise.
func (o *Originator) GetOriginatorIdentityId() string {
	if o == nil || IsNil(o.OriginatorIdentityId) {
		var ret string
		return ret
	}
	return *o.OriginatorIdentityId
}

// GetOriginatorIdentityIdOk returns a tuple with the OriginatorIdentityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Originator) GetOriginatorIdentityIdOk() (*string, bool) {
	if o == nil || IsNil(o.OriginatorIdentityId) {
		return nil, false
	}
	return o.OriginatorIdentityId, true
}

// HasOriginatorIdentityId returns a boolean if a field has been set.
func (o *Originator) HasOriginatorIdentityId() bool {
	if o != nil && !IsNil(o.OriginatorIdentityId) {
		return true
	}

	return false
}

// SetOriginatorIdentityId gets a reference to the given string and assigns it to the OriginatorIdentityId field.
func (o *Originator) SetOriginatorIdentityId(v string) {
	o.OriginatorIdentityId = &v
}

// GetOriginatorIdentityIdVersion returns the OriginatorIdentityIdVersion field value if set, zero value otherwise.
func (o *Originator) GetOriginatorIdentityIdVersion() int32 {
	if o == nil || IsNil(o.OriginatorIdentityIdVersion) {
		var ret int32
		return ret
	}
	return *o.OriginatorIdentityIdVersion
}

// GetOriginatorIdentityIdVersionOk returns a tuple with the OriginatorIdentityIdVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Originator) GetOriginatorIdentityIdVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.OriginatorIdentityIdVersion) {
		return nil, false
	}
	return o.OriginatorIdentityIdVersion, true
}

// HasOriginatorIdentityIdVersion returns a boolean if a field has been set.
func (o *Originator) HasOriginatorIdentityIdVersion() bool {
	if o != nil && !IsNil(o.OriginatorIdentityIdVersion) {
		return true
	}

	return false
}

// SetOriginatorIdentityIdVersion gets a reference to the given int32 and assigns it to the OriginatorIdentityIdVersion field.
func (o *Originator) SetOriginatorIdentityIdVersion(v int32) {
	o.OriginatorIdentityIdVersion = &v
}

// GetOriginatorIdentityNickName returns the OriginatorIdentityNickName field value if set, zero value otherwise.
func (o *Originator) GetOriginatorIdentityNickName() string {
	if o == nil || IsNil(o.OriginatorIdentityNickName) {
		var ret string
		return ret
	}
	return *o.OriginatorIdentityNickName
}

// GetOriginatorIdentityNickNameOk returns a tuple with the OriginatorIdentityNickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Originator) GetOriginatorIdentityNickNameOk() (*string, bool) {
	if o == nil || IsNil(o.OriginatorIdentityNickName) {
		return nil, false
	}
	return o.OriginatorIdentityNickName, true
}

// HasOriginatorIdentityNickName returns a boolean if a field has been set.
func (o *Originator) HasOriginatorIdentityNickName() bool {
	if o != nil && !IsNil(o.OriginatorIdentityNickName) {
		return true
	}

	return false
}

// SetOriginatorIdentityNickName gets a reference to the given string and assigns it to the OriginatorIdentityNickName field.
func (o *Originator) SetOriginatorIdentityNickName(v string) {
	o.OriginatorIdentityNickName = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *Originator) GetInternalId() string {
	if o == nil || IsNil(o.InternalId) {
		var ret string
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Originator) GetInternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.InternalId) {
		return nil, false
	}
	return o.InternalId, true
}

// HasInternalId returns a boolean if a field has been set.
func (o *Originator) HasInternalId() bool {
	if o != nil && !IsNil(o.InternalId) {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given string and assigns it to the InternalId field.
func (o *Originator) SetInternalId(v string) {
	o.InternalId = &v
}

// GetSourceCountry returns the SourceCountry field value if set, zero value otherwise.
func (o *Originator) GetSourceCountry() string {
	if o == nil || IsNil(o.SourceCountry) {
		var ret string
		return ret
	}
	return *o.SourceCountry
}

// GetSourceCountryOk returns a tuple with the SourceCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Originator) GetSourceCountryOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCountry) {
		return nil, false
	}
	return o.SourceCountry, true
}

// HasSourceCountry returns a boolean if a field has been set.
func (o *Originator) HasSourceCountry() bool {
	if o != nil && !IsNil(o.SourceCountry) {
		return true
	}

	return false
}

// SetSourceCountry gets a reference to the given string and assigns it to the SourceCountry field.
func (o *Originator) SetSourceCountry(v string) {
	o.SourceCountry = &v
}

// GetSourceCurrency returns the SourceCurrency field value if set, zero value otherwise.
func (o *Originator) GetSourceCurrency() string {
	if o == nil || IsNil(o.SourceCurrency) {
		var ret string
		return ret
	}
	return *o.SourceCurrency
}

// GetSourceCurrencyOk returns a tuple with the SourceCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Originator) GetSourceCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCurrency) {
		return nil, false
	}
	return o.SourceCurrency, true
}

// HasSourceCurrency returns a boolean if a field has been set.
func (o *Originator) HasSourceCurrency() bool {
	if o != nil && !IsNil(o.SourceCurrency) {
		return true
	}

	return false
}

// SetSourceCurrency gets a reference to the given string and assigns it to the SourceCurrency field.
func (o *Originator) SetSourceCurrency(v string) {
	o.SourceCurrency = &v
}

// GetSourceAmount returns the SourceAmount field value if set, zero value otherwise.
func (o *Originator) GetSourceAmount() float64 {
	if o == nil || IsNil(o.SourceAmount) {
		var ret float64
		return ret
	}
	return *o.SourceAmount
}

// GetSourceAmountOk returns a tuple with the SourceAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Originator) GetSourceAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.SourceAmount) {
		return nil, false
	}
	return o.SourceAmount, true
}

// HasSourceAmount returns a boolean if a field has been set.
func (o *Originator) HasSourceAmount() bool {
	if o != nil && !IsNil(o.SourceAmount) {
		return true
	}

	return false
}

// SetSourceAmount gets a reference to the given float64 and assigns it to the SourceAmount field.
func (o *Originator) SetSourceAmount(v float64) {
	o.SourceAmount = &v
}

// GetPayin returns the Payin field value if set, zero value otherwise.
func (o *Originator) GetPayin() string {
	if o == nil || IsNil(o.Payin) {
		var ret string
		return ret
	}
	return *o.Payin
}

// GetPayinOk returns a tuple with the Payin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Originator) GetPayinOk() (*string, bool) {
	if o == nil || IsNil(o.Payin) {
		return nil, false
	}
	return o.Payin, true
}

// HasPayin returns a boolean if a field has been set.
func (o *Originator) HasPayin() bool {
	if o != nil && !IsNil(o.Payin) {
		return true
	}

	return false
}

// SetPayin gets a reference to the given string and assigns it to the Payin field.
func (o *Originator) SetPayin(v string) {
	o.Payin = &v
}

func (o Originator) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Originator) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OriginatorIdentityId) {
		toSerialize["originatorIdentityId"] = o.OriginatorIdentityId
	}
	if !IsNil(o.OriginatorIdentityIdVersion) {
		toSerialize["originatorIdentityIdVersion"] = o.OriginatorIdentityIdVersion
	}
	if !IsNil(o.OriginatorIdentityNickName) {
		toSerialize["originatorIdentityNickName"] = o.OriginatorIdentityNickName
	}
	if !IsNil(o.InternalId) {
		toSerialize["internalId"] = o.InternalId
	}
	if !IsNil(o.SourceCountry) {
		toSerialize["sourceCountry"] = o.SourceCountry
	}
	if !IsNil(o.SourceCurrency) {
		toSerialize["sourceCurrency"] = o.SourceCurrency
	}
	if !IsNil(o.SourceAmount) {
		toSerialize["sourceAmount"] = o.SourceAmount
	}
	if !IsNil(o.Payin) {
		toSerialize["payin"] = o.Payin
	}
	return toSerialize, nil
}

type NullableOriginator struct {
	value *Originator
	isSet bool
}

func (v NullableOriginator) Get() *Originator {
	return v.value
}

func (v *NullableOriginator) Set(val *Originator) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginator) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginator(val *Originator) *NullableOriginator {
	return &NullableOriginator{value: val, isSet: true}
}

func (v NullableOriginator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


