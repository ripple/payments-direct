/*
Payments Direct API

Use the Payments Direct API to get quotes, create and manage payments, and manage originator and beneficiary identities.  ## API environments  The Payments Direct API offers the following environments:  | <div style=\"width:90px\">Environment</div>  | Base URL                      | Description                               | | ------------------------------------------ | ----------------------------- | ----------------------------------------- | | Test                                       | `https://api.test.ripple.com` | Test environment with simulated currency. | | Production                                 | `https://api.ripple.com`      | Production environment                    |  ## API authentication  All {{process.env.VAR_RPD}} API operations require a Bearer access token specific to the environment you're using. Ripple provides a secure model for authentication and authorization by providing access tokens scoped for a set of credentials.  ### Generate client ID and client secret  You will need your _client ID_ and _client secret_ to obtain an access token.  If you do not already have your client ID and client secret, do the following:  1. Log into the Ripple Payments UI. 2. In the left navigation menu, click **Settings**. 3. Under **Administration**, click **API Credentials**. 4. In the dropdown list next to the page title, select the access environment. For example, to provision credentials for the test environment, select **Test** from the dropdown list. 5. In the upper right corner of the page, click **New Credential**. 6. Click **Save and Generate Key**.  **Caution:** The *client secret* is displayed only once when you are creating new credentials. You cannot retrieve the secret after exiting this page. Copy and store the client secret securely and share it with authorized individuals in accordance with your organization's security policy.  You can now use the client ID and client secret to generate access tokens using the [Request an access token](/api-docs/payments-direct-api/reference/#operation/authenticate) operation.  ### Request an access token  To get an access token, use the [Request an access token](/api-docs/payments-direct-api/reference/#operation/authenticate) operation with your `client_id` and `client_secret`. The response contains a token in the `access_token` field.  We recommend rotating your API credentials at regular intervals according to your organization's security policy.  **Note**: Authentication tokens are not a fixed length and can vary, avoid validating tokens based on character length. 

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentsdirect

import (
	"encoding/json"
)

// checks if the Destination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Destination{}

// Destination Payment beneficiary and destination details.
type Destination struct {
	// The amount received by the payment beneficiary. This field can hold a value with up to 6 decimal places.
	DestinationAmount *float64 `json:"destinationAmount,omitempty"`
	// The country where the beneficiary is located specified in Alpha-2 Code format as defined in the ISO CountryCode ISO 3166-1 list. If the beneficiary is an individual, then this value is their country of residence. If the beneficiary is an institution, then this value is their the country of incorporation.
	DestinationCountry *string `json:"destinationCountry,omitempty" validate:"regexp=^[A-Z]{2}$"`
	// The currency code of the currency in which the beneficiary will receive this payment.
	DestinationCurrency *string `json:"destinationCurrency,omitempty" validate:"regexp=^[A-Z]{3,5}$"`
	// The name of the blockchain network on which the beneficiary will receive this payment.
	DestinationBlockchainNetwork *string `json:"destinationBlockchainNetwork,omitempty"`
	// The unique ID associated with the payment beneficiary's identity record.
	BeneficiaryIdentityId *string `json:"beneficiaryIdentityId,omitempty"`
	// The current version of the beneficiary's identity record.
	BeneficiaryIdentityVersion *int32 `json:"beneficiaryIdentityVersion,omitempty"`
	// Nickname associated with the beneficiary's identity record.
	BeneficiaryIdentityNickName *string `json:"beneficiaryIdentityNickName,omitempty"`
	// The payout category for this payment.
	Payout *string `json:"payout,omitempty"`
}

// NewDestination instantiates a new Destination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestination() *Destination {
	this := Destination{}
	return &this
}

// NewDestinationWithDefaults instantiates a new Destination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestinationWithDefaults() *Destination {
	this := Destination{}
	return &this
}

// GetDestinationAmount returns the DestinationAmount field value if set, zero value otherwise.
func (o *Destination) GetDestinationAmount() float64 {
	if o == nil || IsNil(o.DestinationAmount) {
		var ret float64
		return ret
	}
	return *o.DestinationAmount
}

// GetDestinationAmountOk returns a tuple with the DestinationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Destination) GetDestinationAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.DestinationAmount) {
		return nil, false
	}
	return o.DestinationAmount, true
}

// HasDestinationAmount returns a boolean if a field has been set.
func (o *Destination) HasDestinationAmount() bool {
	if o != nil && !IsNil(o.DestinationAmount) {
		return true
	}

	return false
}

// SetDestinationAmount gets a reference to the given float64 and assigns it to the DestinationAmount field.
func (o *Destination) SetDestinationAmount(v float64) {
	o.DestinationAmount = &v
}

// GetDestinationCountry returns the DestinationCountry field value if set, zero value otherwise.
func (o *Destination) GetDestinationCountry() string {
	if o == nil || IsNil(o.DestinationCountry) {
		var ret string
		return ret
	}
	return *o.DestinationCountry
}

// GetDestinationCountryOk returns a tuple with the DestinationCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Destination) GetDestinationCountryOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationCountry) {
		return nil, false
	}
	return o.DestinationCountry, true
}

// HasDestinationCountry returns a boolean if a field has been set.
func (o *Destination) HasDestinationCountry() bool {
	if o != nil && !IsNil(o.DestinationCountry) {
		return true
	}

	return false
}

// SetDestinationCountry gets a reference to the given string and assigns it to the DestinationCountry field.
func (o *Destination) SetDestinationCountry(v string) {
	o.DestinationCountry = &v
}

// GetDestinationCurrency returns the DestinationCurrency field value if set, zero value otherwise.
func (o *Destination) GetDestinationCurrency() string {
	if o == nil || IsNil(o.DestinationCurrency) {
		var ret string
		return ret
	}
	return *o.DestinationCurrency
}

// GetDestinationCurrencyOk returns a tuple with the DestinationCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Destination) GetDestinationCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationCurrency) {
		return nil, false
	}
	return o.DestinationCurrency, true
}

// HasDestinationCurrency returns a boolean if a field has been set.
func (o *Destination) HasDestinationCurrency() bool {
	if o != nil && !IsNil(o.DestinationCurrency) {
		return true
	}

	return false
}

// SetDestinationCurrency gets a reference to the given string and assigns it to the DestinationCurrency field.
func (o *Destination) SetDestinationCurrency(v string) {
	o.DestinationCurrency = &v
}

// GetDestinationBlockchainNetwork returns the DestinationBlockchainNetwork field value if set, zero value otherwise.
func (o *Destination) GetDestinationBlockchainNetwork() string {
	if o == nil || IsNil(o.DestinationBlockchainNetwork) {
		var ret string
		return ret
	}
	return *o.DestinationBlockchainNetwork
}

// GetDestinationBlockchainNetworkOk returns a tuple with the DestinationBlockchainNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Destination) GetDestinationBlockchainNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationBlockchainNetwork) {
		return nil, false
	}
	return o.DestinationBlockchainNetwork, true
}

// HasDestinationBlockchainNetwork returns a boolean if a field has been set.
func (o *Destination) HasDestinationBlockchainNetwork() bool {
	if o != nil && !IsNil(o.DestinationBlockchainNetwork) {
		return true
	}

	return false
}

// SetDestinationBlockchainNetwork gets a reference to the given string and assigns it to the DestinationBlockchainNetwork field.
func (o *Destination) SetDestinationBlockchainNetwork(v string) {
	o.DestinationBlockchainNetwork = &v
}

// GetBeneficiaryIdentityId returns the BeneficiaryIdentityId field value if set, zero value otherwise.
func (o *Destination) GetBeneficiaryIdentityId() string {
	if o == nil || IsNil(o.BeneficiaryIdentityId) {
		var ret string
		return ret
	}
	return *o.BeneficiaryIdentityId
}

// GetBeneficiaryIdentityIdOk returns a tuple with the BeneficiaryIdentityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Destination) GetBeneficiaryIdentityIdOk() (*string, bool) {
	if o == nil || IsNil(o.BeneficiaryIdentityId) {
		return nil, false
	}
	return o.BeneficiaryIdentityId, true
}

// HasBeneficiaryIdentityId returns a boolean if a field has been set.
func (o *Destination) HasBeneficiaryIdentityId() bool {
	if o != nil && !IsNil(o.BeneficiaryIdentityId) {
		return true
	}

	return false
}

// SetBeneficiaryIdentityId gets a reference to the given string and assigns it to the BeneficiaryIdentityId field.
func (o *Destination) SetBeneficiaryIdentityId(v string) {
	o.BeneficiaryIdentityId = &v
}

// GetBeneficiaryIdentityVersion returns the BeneficiaryIdentityVersion field value if set, zero value otherwise.
func (o *Destination) GetBeneficiaryIdentityVersion() int32 {
	if o == nil || IsNil(o.BeneficiaryIdentityVersion) {
		var ret int32
		return ret
	}
	return *o.BeneficiaryIdentityVersion
}

// GetBeneficiaryIdentityVersionOk returns a tuple with the BeneficiaryIdentityVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Destination) GetBeneficiaryIdentityVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.BeneficiaryIdentityVersion) {
		return nil, false
	}
	return o.BeneficiaryIdentityVersion, true
}

// HasBeneficiaryIdentityVersion returns a boolean if a field has been set.
func (o *Destination) HasBeneficiaryIdentityVersion() bool {
	if o != nil && !IsNil(o.BeneficiaryIdentityVersion) {
		return true
	}

	return false
}

// SetBeneficiaryIdentityVersion gets a reference to the given int32 and assigns it to the BeneficiaryIdentityVersion field.
func (o *Destination) SetBeneficiaryIdentityVersion(v int32) {
	o.BeneficiaryIdentityVersion = &v
}

// GetBeneficiaryIdentityNickName returns the BeneficiaryIdentityNickName field value if set, zero value otherwise.
func (o *Destination) GetBeneficiaryIdentityNickName() string {
	if o == nil || IsNil(o.BeneficiaryIdentityNickName) {
		var ret string
		return ret
	}
	return *o.BeneficiaryIdentityNickName
}

// GetBeneficiaryIdentityNickNameOk returns a tuple with the BeneficiaryIdentityNickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Destination) GetBeneficiaryIdentityNickNameOk() (*string, bool) {
	if o == nil || IsNil(o.BeneficiaryIdentityNickName) {
		return nil, false
	}
	return o.BeneficiaryIdentityNickName, true
}

// HasBeneficiaryIdentityNickName returns a boolean if a field has been set.
func (o *Destination) HasBeneficiaryIdentityNickName() bool {
	if o != nil && !IsNil(o.BeneficiaryIdentityNickName) {
		return true
	}

	return false
}

// SetBeneficiaryIdentityNickName gets a reference to the given string and assigns it to the BeneficiaryIdentityNickName field.
func (o *Destination) SetBeneficiaryIdentityNickName(v string) {
	o.BeneficiaryIdentityNickName = &v
}

// GetPayout returns the Payout field value if set, zero value otherwise.
func (o *Destination) GetPayout() string {
	if o == nil || IsNil(o.Payout) {
		var ret string
		return ret
	}
	return *o.Payout
}

// GetPayoutOk returns a tuple with the Payout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Destination) GetPayoutOk() (*string, bool) {
	if o == nil || IsNil(o.Payout) {
		return nil, false
	}
	return o.Payout, true
}

// HasPayout returns a boolean if a field has been set.
func (o *Destination) HasPayout() bool {
	if o != nil && !IsNil(o.Payout) {
		return true
	}

	return false
}

// SetPayout gets a reference to the given string and assigns it to the Payout field.
func (o *Destination) SetPayout(v string) {
	o.Payout = &v
}

func (o Destination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Destination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DestinationAmount) {
		toSerialize["destinationAmount"] = o.DestinationAmount
	}
	if !IsNil(o.DestinationCountry) {
		toSerialize["destinationCountry"] = o.DestinationCountry
	}
	if !IsNil(o.DestinationCurrency) {
		toSerialize["destinationCurrency"] = o.DestinationCurrency
	}
	if !IsNil(o.DestinationBlockchainNetwork) {
		toSerialize["destinationBlockchainNetwork"] = o.DestinationBlockchainNetwork
	}
	if !IsNil(o.BeneficiaryIdentityId) {
		toSerialize["beneficiaryIdentityId"] = o.BeneficiaryIdentityId
	}
	if !IsNil(o.BeneficiaryIdentityVersion) {
		toSerialize["beneficiaryIdentityVersion"] = o.BeneficiaryIdentityVersion
	}
	if !IsNil(o.BeneficiaryIdentityNickName) {
		toSerialize["beneficiaryIdentityNickName"] = o.BeneficiaryIdentityNickName
	}
	if !IsNil(o.Payout) {
		toSerialize["payout"] = o.Payout
	}
	return toSerialize, nil
}

type NullableDestination struct {
	value *Destination
	isSet bool
}

func (v NullableDestination) Get() *Destination {
	return v.value
}

func (v *NullableDestination) Set(val *Destination) {
	v.value = val
	v.isSet = true
}

func (v NullableDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestination(val *Destination) *NullableDestination {
	return &NullableDestination{value: val, isSet: true}
}

func (v NullableDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


